---
  - name: "Name Game"                       #Имя игры  
    hosts: ubuntu                           #Хост на котором необходимо выполнить задачи
    become: yes                             #Выполнить под суперпользователем
    any_errors_fatal: true                  #Если будет хоть одная ошибка, то прекращается весь плейбук

    vars:                                   #Создание меременных
      source_folder: ~/ansible/roles/deploy_apache_web/files/
      destin_folder: /var/www/html/img/about/

    tasks:                                  #Блок со списком задач
      - name: Say Hello to ALL              #Название задачи
        debug: msg="Hello {{ item }}"       #Используемые модуль. В данном случае debug. Системная переменная item
        loop:                               #loop как список переменных
          - "Vasya"
          - "Petya"
          - "Masha"
          - "Igor" 
      - name: Loop Until example                          #Название задачи
        shell: echo -n Z >> myfile.txt && cat myfile.txt  #Используемые модуль. В данном случае shell. Системная переменная item
        register: output                                  #Записывает в переменную output вывод из команды выше
        delay: 2                                          #Выполняет задержку между командами
        retries: 10                                       #Повтор цикла в течении 10 раз
        until: output.stdout.find("ZZZZ") == false        #Цикл выполняется либо через 10 раз либо пока в переменную output не запишется ZZZZ

      - name: Print Final Output                          #Название задачи
        debug:                                            #Используемые модуль. В данном случае debug. 
          var: output.stdout                              #Переменная которую необходимо вывести
      
      - block:        #==============Block for UBUNTU=============#     # Создаем блок 
          - name: Install nginx for Debian                              #Название задачи
            apt: name=nginx state=latest                                #Используемые модуль apt. Который устанавливает последнюю версию nginx
            notify: Restart nginx Debian                                #Вызывается handlers по имени Restart nginx Debian

          - name: Start nginx for Debian                                #Название задачи
            service: name=nginx state=started enabled=yes               #Используемые модуль service. Который стартует сервис nginx и ставит его в автозагрузку

        when: ansible_os_family == "Debian"                             #Блок выполняется когда выполняется условие ansible_os_family == "Ubuntu" 

      - name: Copy HomePage file to Web Server
        copy: src={{ source_folder }}/{{ item }} dest={{ destin_folder }} mode=0555  #Используем модуль copy. используеюстя переменные
        loop:                                                                        #Список переменных
          - pet_care.png
        notify:
          - Restart nginx Debian                                                     #Вызывается handlers estart nginx Debian 
        delegate_to: ubuntu                                                          #Задача запускается только на указанном сервере, остальные игонорируются
        ignore_errors: true                                                          #При ошибке плейбук не прерывается, а продолжается дальше выполнение задач, игнорируя текущуу задачу

      - name: Unregister Server from Load Balancer
        shell: echo This server {{ inventory_hostname }} was deregistered from out Load Balancer, node name is {{ ansible_nodename }} >> /home/igor/log.txt  #Используемые модуль shell, который записывает в лог и делегирует его с помощью delegate_to на локальный сервер
        delegate_to: localh                                               

      - name: Task Number2                               #Название задачи                       
        shell: echo Hello World!                         #модулем shell пишем 
        register: results                                #Сохраняем вывод верхней строки в переменную result
        failed_when: "'World' in results.stdout"         #Вывести ошибку, если в потоке вывода переменной result присутствует слово World
      # failed_when: results.rc == 0                     #Вывести ошибку, если в return code не равен 0

    handlers:                                             #Задача которая запускается по команде notify
      - name: Restart nginx Debian                        #Название задачи
        service: name=nginx state=restarted               #Используемые модуль service, который рестарует nginx